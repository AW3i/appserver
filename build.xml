<?xml version="1.0"?>
<!DOCTYPE project>
<project name="appserver-io/appserver" default="composer-init" basedir=".">
    
    <!-- initialize ENV variable -->
    <property environment="env" />
    
    <!-- initialize file based properties -->
    <property file="${basedir}/build.properties"/>
    <property file="${basedir}/build.default.properties"/>
    <property file="${basedir}/build.${os.family}.properties"/>
    
    <!-- initialize the library specific properties -->
    <property name="codepool" value="vendor"/>
    
    <!-- initialize the directory where we can find the real build files -->
    <property name="vendor.dir" value ="${basedir}/${codepool}" />
    <property name="build.dir" value="${vendor.dir}/appserver-io/build" />
    
    <!-- ==================================================================== -->
    <!-- Import the common build configuration file                           -->
    <!-- ==================================================================== -->
    <import file="${build.dir}/common.xml" optional="true"/>

    <!-- ==================================================================== -->
    <!-- Checks if composer has installed it's dependencies                   -->
    <!-- ==================================================================== -->
    <target name="is-composer-installed">
        <condition property="composer.present">
            <available file="${build.dir}" type="dir"/>
        </condition>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Installs all dependencies defined in composer.json                   -->
    <!-- ==================================================================== -->
    <target name="composer-install" depends="is-composer-installed" unless="composer.present" description="Installs all dependencies defined in composer.json">
        <exec dir="${basedir}" executable="composer">
            <arg line="--no-interaction --dev install"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Updates composer dependencies defined in composer.json               -->
    <!-- ==================================================================== -->
    <target name="composer-update" depends="is-composer-installed" if="composer.present" description="Updates composer dependencies defined in composer.json">
        <exec dir="${basedir}" executable="composer">
            <arg line="--no-interaction --dev update"/>
        </exec>
    </target>

    <!-- ===================================================================== -->
    <!-- Checks if the build- and deployment stub has already been initialized -->
    <!-- ===================================================================== -->
    <target name="composer-init">
        <antcall target="composer-install"/>
        <antcall target="composer-update"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the documentation to the target directory                     -->
    <!-- ==================================================================== -->
    <target name="copy-doc" description="Copies the documentation to the target directory.">
        <exec executable="make" dir="${basedir}/doc-generator" failonerror="true">
            <arg line="html" />
        </exec>
        <copy file="${doc.build.file}" tofile="${doc.target.file}" overwrite="true"/>
        <copy todir="${doc.image.target.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="${doc.image.build.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
        <replaceregexp file="${doc.target.file}"
                       match="src=&quot;_images"
                       replace="src=&quot;static/img/docs"
                       byline="true"
        />
    </target>
    
    <!-- ==================================================================== -->
    <!-- Copies the sources to the temporary directory                        -->
    <!-- ==================================================================== -->
    <target name="copy" description="Copies the sources to the temporary directory.">
        <!-- prepare the build environment -->
        <antcall target="prepare" />
        <!-- copy all files to the target directory -->
        <copy todir="${php-target.dir}/appserver" preservelastmodified="true" overwrite="true">
            <fileset dir="${basedir}">
                <include name="src/**/*" />
                <include name="var/**/*" />
                <include name="tests/**/*" />
                <include name="resources/**/*" />
                <include name="server.php" />
                <include name="composer.json" />
                <include name="etc/appserver/conf.d/context.xml" />
            </fileset>
        </copy>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Copies the sources to the deploy directory                           -->
    <!-- ==================================================================== -->
    <target name="deploy" depends="copy" description="Copies the sources to the deploy directory.">
        <!-- copy all files to the deploy.directory -->
        <copy todir="${deploy.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-target.dir}/appserver">
                <include name="**/*"/>
            </fileset>
        </copy>
        <!-- execute the composer post install script -->
        <exec dir="${deploy.dir}" executable="${appserver.bin.dir}/php">
            <arg value="${appserver.bin.dir}/composer.phar" />
            <arg value="run-script" />
            <arg value="post-install-cmd" />
        </exec>
    </target>

</project>